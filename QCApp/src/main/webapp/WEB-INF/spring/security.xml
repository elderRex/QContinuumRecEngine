<beans:beans xmlns="http://www.springframework.org/schema/security"  
 xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
 xsi:schemaLocation="http://www.springframework.org/schema/beans  
 http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
 http://www.springframework.org/schema/security  
 http://www.springframework.org/schema/security/spring-security-3.1.xsd">  
  
	<!--  Authentication -->
  <http use-expressions="true">  
  <access-denied-handler error-page="/errors/404" />
  <intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" />
  <form-login login-page='/login' username-parameter="email"  
   password-parameter="password" default-target-url="/user"  
   authentication-failure-url="/errors/authfailed" />  
   
  <logout logout-url="/logout" success-handler-ref="logoutHandler" />
  
  <session-management invalid-session-url="/" />
  
 </http>
 
  <beans:bean id="dataSource" name="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://qcont4156.cigcl8d9knyc.us-east-1.rds.amazonaws.com:3306/qc_db" />
		<beans:property name="username" value="qc4156" />
		<beans:property name="password" value="4156qcont!" />
	</beans:bean>
	
	 <beans:bean id="transactionManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="sessionFactory" />
    </beans:bean>
	
	<!--  Hibernate Session Factory Bean Defined -->
	 <beans:bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="configLocation">
            <beans:value>classpath:hibernate.cfg.xml</beans:value>
        </beans:property>
        <beans:property name="configurationClass">
            <beans:value>org.hibernate.cfg.AnnotationConfiguration</beans:value>
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>  
 
<beans:bean id="logoutHandler" class="QCTeamG.QCApp.controller.LogoutHandler" >
	    <beans:constructor-arg value="/qc" />
	</beans:bean>
  
<!--  authentication-success-handler-ref="customAuthenticationSuccessHandler" -->
  
 <authentication-manager>  
  <authentication-provider>
   <password-encoder ref="encoder" />
   <jdbc-user-service data-source-ref="dataSource"  
    users-by-username-query="select email,password, enabled from users where email=?"  
    authorities-by-username-query="select email, role from user_roles where email=?  " />  
  </authentication-provider>  
 </authentication-manager>
 
  <beans:bean id="encoder" 
	class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	<beans:constructor-arg name="strength" value="11" />
  </beans:bean>
  
</beans:beans>  